/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { Html, shaderMaterial, useGLTF } from "@react-three/drei";
import React from "react";
import {pointLight} from '@react-three/drei';

export function Cloud({ opacity, ...props }) {
  const { nodes, materials } = useGLTF("./models/cloud/cloud_11.glb");
  console.log(nodes)
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.cloudball001.geometry}>
        <meshStandardMaterial
          onBeforeCompile={(shaderMaterial)=>{
            shaderMaterial.fragmentShader=shaderMaterial.fragmentShader.replace(`vec4 diffuseColor=vec4( diffuse, opacity);`,
            `float fadeDistance=50;
            float dist=length(vViewPosition);
            float fadeOpacity=smoothstep(fadeDistance,0.0,dist);
            vec4 diffuseColor=vec4( diffuse, fadeOpacity * opacity);
            `)
          }}//FOR FADING EFFECT**


          {...materials["lambert2SG.001"]}
          transparent
          opacity={opacity}
          style={{filter:"blur(10px)"}}

          
        />
      </mesh>
    </group>
  );
}

useGLTF.preload("./models/cloud/model.glb");
